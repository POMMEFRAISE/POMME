driver = com.mysql.jdbc.Driver
url = jdbc:mysql://localhost/pdsbdd
utilisateur=  root
motDePasse = 

recupererJoueurSQL = SELECT nom, prenom, email, login, motdepasse FROM joueur WHERE login = ? AND motdepasse = ?;
verifierJoueurSQL = SELECT login, motdepasse FROM joueur WHERE login = ? AND motdepasse = ?;
creerCompteSQL = INSERT INTO joueur (nom, prenom, email, login, motdepasse) VALUES(?,?,?,?,?);
gererProfilJoueurSQL = UPDATE joueur SET nom= ?,prenom = ?,email = ?, login = ?,motdepasse=? WHERE id = ? ;
creerPartieSQL = INSERT INTO partie(nomPartie, nbreDeJoueur, statut, dateCreation) VALUES (?,?,?,LOCALTIME);
recupererPartieSQL = SELECT nomPartie, nbreDeJoueur, statut, dateCreation FROM partie WHERE nomPartie = ? ;
recupererListePartieSQL = SELECT nomPartie, nbreDeJoueur, statut, dateCreation FROM partie WHERE TIME_TO_SEC(TIMEDIFF(LOCALTIME, dateCreation)) <= 300 AND statut='ouvert' HAVING nbreDeJoueur < (SELECT COUNT(*) FROM score) UNION SELECT nomPartie, nbreDeJoueur, statut, dateCreation FROM partie WHERE TIME_TO_SEC(TIMEDIFF(LOCALTIME, dateCreation)) <= 300 AND statut='ouvert' AND partie.id NOT IN(SELECT 1 FROM score);
verifierPartieSQL = SELECT nomPartie FROM partie WHERE nomPartie= ?;
afficherEtatPartieSQL = SELECT nomPartie, statut FROM partie WHERE nomPartie = ? ;
recupererListePartieAFermerSQL = SELECT nomPartie, nbreDeJoueur FROM partie WHERE TIME_TO_SEC(TIMEDIFF(LOCALTIME, dateCreation)) > 300 AND statut='ouvert' HAVING nbreDeJoueur = (SELECT COUNT(*) FROM score) UNION SELECT nomPartie, nbreDeJoueur FROM partie WHERE TIME_TO_SEC(TIMEDIFF(LOCALTIME, dateCreation)) > 300 AND statut='ouvert' AND partie.id NOT IN(SELECT 1 FROM score);
recupererListePartiePourChangerEtatSQL = SELECT nomPartie, nbreDeJoueur FROM partie WHERE statut='fermer';
fermerPartieSQL = UPDATE partie SET statut = ? WHERE nomPartie = ? ;
verifierPartieRejoindreSQL = SELECT nomPartie, nbreDeJoueur FROM partie WHERE TIME_TO_SEC(TIMEDIFF(LOCALTIME, dateCreation)) <= 300 AND statut='ouvert' AND nomPartie = ? HAVING nbreDeJoueur < (SELECT COUNT(*) FROM score) UNION SELECT nomPartie, nbreDeJoueur FROM partie WHERE TIME_TO_SEC(TIMEDIFF(LOCALTIME, dateCreation)) <= 300 AND statut='ouvert' AND partie.id NOT IN(SELECT 1 FROM score JOIN partie ON score.id_Partie = partie.id WHERE partie.nomPartie = ?);
rejoindrePartieSQL = INSERT INTO score(id_Joueur, id_Partie, numeroPresentation) VALUES ((SELECT id FROM joueur WHERE login = ?), (SELECT id FROM partie WHERE nomPartie = ?), ?);
changerEtatPartieSQL = UPDATE partie SET statut = ? WHERE nomPartie = ? ;
partieAFermerSQL = SELECT nomPartie FROM partie WHERE nomPartie = ? AND (id NOT IN(SELECT 1 FROM score JOIN partie p ON score.id_Partie = p.id AND nomPartie = ? ) OR (SELECT COUNT(*) FROM score LEFT JOIN partie p1 ON score.id_Partie = p1.id AND nomPartie = ?) < nbreDeJoueur);
recupererListePartiesPourJeuSQL = SELECT nomPartie FROM score JOIN partie ON score.id_Partie = partie.id AND statut ='fermer' OR statut='annuler';
recupererJoueursPartieSQL = SELECT numeroPresentation, login FROM score JOIN joueur ON score.id_Joueur = joueur.id JOIN partie ON score.id_Partie = partie.id AND nomPartie = ?;
recupererListePartieAnnulerASupSQL = SELECT id FROM partie WHERE statut = ? AND id IN (SELECT id_Partie FROM score);
supprimerScorePartiesAnnulerSQL = DELETE FROM score WHERE id_Partie = ?;
consulterScore = 

enregistrerCommandeSQL = INSERT INTO commande(commandedata, numeroPresentation) VALUES (?,?);
afficherCommandeSQL = SELECT id ,commandedata FROM commande;
demanderNumeroPresentationSQL= SELECT MAX(numeroPresentation) AS 'numeroPresentation' FROM commande;